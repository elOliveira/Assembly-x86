org 0x7c00;
jmp 0x0000:start

hello db 'Digite a sua palavra ', 13,10,0 ;  reservando espaco na memoria para string
stringTeste db 'aaaa',  13,10,0 ;  vou preencher as coisas do teclado aqui dentro 

start:
    xor ax, ax; zerando ax
    mov ds, ax; zerando ds
    mov es, ax; zerando es

    mov si, hello;  faz si apontar para inicio de 'hello
    call print_string   ;vou printar o bagulho da string1

    mov si, stringTeste; vou apontar para o inicio da 2 string  /// acho que n precisa apontar pq na interrupc ja ta sendo usado o reg AL
    ;mov bl , si; guardando o endereco da string 2 , ja que vai ser modificado o al na interrupcao de vd
    call inputTeclado

    mov si, stringTeste;
    call print_string;

    jmp done

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  funcao feita na doida ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
inputTeclado:
    mov ah,0;   numero da chamada   
    int 16h ;   inicia interrupcao para receber do teclado 

    cmp al,0   ; comparando se foi apertada a tecla enter
    ret ; se for o final, retorna 

    ;;;;;;;;;;;;;;;;; essa parte eu n sei se ta pegando n
    mov bl,al ; passando o valor que ta dentro de al ( lido pelo teclado ) para dentro da string que tava apontada por es 
    inc bl;     incrementando para andar no vetor 2 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; aqui ta tudo normal ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
print_string:
    lodsb;  carrega uma letra de si em al e passa para o proximo char 
    cmp al,0 ; verifica se chegou ao final da string (equivalente a um \0)
    je .done

    mov ah, 0eh ;   codigo da instrucao para imprimir um caractere que est√° em al
    int 10h ; interrupcao de video 
    jmp print_string
    .done:
        ret; retornna para o start 

done:
      jmp $         

times 510-($-$$) db 0
dw 0xaa55
